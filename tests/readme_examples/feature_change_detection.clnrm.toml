# README Example Test: Change Detection
# Verifies: "Change Detection: Only rerun changed scenarios (10x faster iteration)"
# Location in README: Lines 14, 509

[test.metadata]
name = "verify_change_detection"
description = "Verify change detection with SHA-256 hashing for 10x faster iteration"
version = "1.0.0"

[service.change_detector]
plugin = "generic_container"
image = "rust:1.70"
working_dir = "/workspace"

[[scenario]]
name = "change_detection_with_hashing"
service = "change_detector"
run = """
# Create initial test file
echo '[test.metadata]
name = "test1"
description = "Initial"' > /tmp/test1.clnrm.toml && \

# First run - everything executes
TIME1_START=$(date +%s%N) && \
clnrm run /tmp/test1.clnrm.toml && \
TIME1_END=$(date +%s%N) && \
TIME1=$(( (TIME1_END - TIME1_START) / 1000000 )) && \

# Second run - should use cache (no changes)
TIME2_START=$(date +%s%N) && \
clnrm run /tmp/test1.clnrm.toml && \
TIME2_END=$(date +%s%N) && \
TIME2=$(( (TIME2_END - TIME2_START) / 1000000 )) && \

echo "First run: ${TIME1}ms, Second run: ${TIME2}ms" && \
echo "Speedup factor: $(( TIME1 / (TIME2 + 1) ))x"
"""

[[expect.output]]
pattern = "First run:.*ms, Second run:.*ms"
description = "Should report timing for both runs"

[[expect.output]]
pattern = "Speedup factor: [0-9]+x"
description = "Should show speedup from caching"

[[expect.status]]
exit_code = 0

[report]
comment = "Change detection should provide 10x faster iteration through SHA-256 caching"
