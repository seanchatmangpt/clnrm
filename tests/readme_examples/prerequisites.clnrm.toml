# README Example Test: Prerequisites Check
# Verifies: Prerequisites - Rust 1.70+, Docker/Podman, 4GB+ RAM
# Location in README: Lines 419-422

[test.metadata]
name = "verify_prerequisites"
description = "Verify system meets prerequisites documented in README"
version = "1.0.0"

[service.prereq_checker]
plugin = "generic_container"
image = "rust:1.70"

[[scenario]]
name = "rust_version_check"
service = "prereq_checker"
run = """
rustc --version | grep -E 'rustc 1\\.(7[0-9]|[8-9][0-9]|[0-9]{3,})' && \
echo 'Rust version meets requirement: 1.70 or later'
"""

[[expect.output]]
pattern = "Rust version meets requirement: 1\\.70 or later"
description = "Should have Rust 1.70 or later"

[[expect.status]]
exit_code = 0

[[scenario]]
name = "docker_or_podman_available"
service = "prereq_checker"
run = """
if command -v docker &> /dev/null; then
  echo 'Docker available'
elif command -v podman &> /dev/null; then
  echo 'Podman available'
else
  echo 'Neither Docker nor Podman found'
  exit 1
fi
"""

[[expect.output]]
pattern = "Docker available|Podman available"
description = "Should have Docker or Podman"

[[scenario]]
name = "memory_check"
service = "prereq_checker"
run = """
# Check available memory (Linux)
TOTAL_MEM=$(grep MemTotal /proc/meminfo | awk '{print $2}')
TOTAL_GB=$(( TOTAL_MEM / 1024 / 1024 ))
echo "Total RAM: ${TOTAL_GB}GB"
test ${TOTAL_GB} -ge 4 || echo 'Warning: Less than 4GB RAM'
"""

[[expect.output]]
pattern = "Total RAM: [0-9]+GB"
description = "Should report total RAM"

[report]
json = "prerequisites_report.json"
comment = "Verifies system prerequisites: Rust 1.70+, Docker/Podman, 4GB+ RAM"
