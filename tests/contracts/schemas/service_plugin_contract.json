{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "$id": "https://clnrm.dev/schemas/service_plugin_contract.json",
  "title": "Service Plugin Contract",
  "description": "Contract definition for CLNRM service plugins",
  "type": "object",
  "required": ["name", "version", "plugin_type", "capabilities", "lifecycle", "health_check"],
  "properties": {
    "name": {
      "type": "string",
      "description": "Unique name of the service plugin",
      "pattern": "^[a-z][a-z0-9_]*$",
      "minLength": 3,
      "maxLength": 50
    },
    "version": {
      "type": "string",
      "description": "Semantic version of the plugin",
      "pattern": "^\\d+\\.\\d+\\.\\d+$"
    },
    "plugin_type": {
      "type": "string",
      "enum": ["database", "ai_model", "generic_container", "custom"],
      "description": "Type of service plugin"
    },
    "capabilities": {
      "type": "object",
      "required": ["start", "stop", "health_check"],
      "properties": {
        "start": {
          "type": "object",
          "description": "Start capability contract",
          "required": ["timeout_seconds", "return_type"],
          "properties": {
            "timeout_seconds": {
              "type": "integer",
              "minimum": 1,
              "maximum": 300
            },
            "return_type": {
              "type": "string",
              "enum": ["ServiceHandle"]
            }
          }
        },
        "stop": {
          "type": "object",
          "description": "Stop capability contract",
          "required": ["timeout_seconds", "cleanup_required"],
          "properties": {
            "timeout_seconds": {
              "type": "integer",
              "minimum": 1,
              "maximum": 60
            },
            "cleanup_required": {
              "type": "boolean"
            }
          }
        },
        "health_check": {
          "type": "object",
          "description": "Health check capability contract",
          "required": ["return_type", "status_values"],
          "properties": {
            "return_type": {
              "type": "string",
              "enum": ["HealthStatus"]
            },
            "status_values": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": ["Healthy", "Unhealthy", "Unknown"]
              },
              "minItems": 3,
              "maxItems": 3
            }
          }
        }
      }
    },
    "lifecycle": {
      "type": "object",
      "description": "Plugin lifecycle contract",
      "required": ["initialization", "shutdown"],
      "properties": {
        "initialization": {
          "type": "object",
          "properties": {
            "required_env_vars": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "optional_env_vars": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "async": {
              "type": "boolean",
              "default": true
            }
          }
        },
        "shutdown": {
          "type": "object",
          "properties": {
            "graceful_timeout_seconds": {
              "type": "integer",
              "minimum": 1,
              "maximum": 60
            },
            "force_kill_after_timeout": {
              "type": "boolean",
              "default": true
            }
          }
        }
      }
    },
    "health_check": {
      "type": "object",
      "description": "Health check configuration",
      "required": ["interval_seconds", "timeout_seconds", "retries"],
      "properties": {
        "interval_seconds": {
          "type": "integer",
          "minimum": 1,
          "maximum": 60
        },
        "timeout_seconds": {
          "type": "integer",
          "minimum": 1,
          "maximum": 30
        },
        "retries": {
          "type": "integer",
          "minimum": 1,
          "maximum": 10
        }
      }
    },
    "metadata": {
      "type": "object",
      "description": "Optional plugin metadata",
      "properties": {
        "author": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "documentation_url": {
          "type": "string",
          "format": "uri"
        },
        "tags": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    }
  }
}
