# Rosetta Stone Test #5: Graph Topology Validation
# Validates: STRUCTURAL (advanced) - parent-child relationships and span graphs
# Pattern: Validates tree structure, edge validation, hierarchical relationships
#
# This test ensures:
# - Correct parent-child span relationships
# - No orphaned spans
# - Tree structure integrity (no cycles)
# - Edge attributes are correct
# - Span graph matches expected topology

[test.metadata]
name = "rosetta_graph_topology"
description = "Validates span graph structure, parent-child relationships, and tree integrity"
timeout = "120s"

# OTEL Collector
[services.otel_collector]
type = "otel_collector"
plugin = "generic_container"
image = "otel/opentelemetry-collector:latest"

[services.otel_collector.env]
ENABLE_OTLP_HTTP = "true"

# API Gateway - root of the trace tree
[services.api_gateway]
type = "generic_container"
plugin = "generic_container"
image = "alpine:latest"

[services.api_gateway.env]
OTEL_SERVICE_NAME = "rosetta-api-gateway"
OTEL_EXPORTER_OTLP_ENDPOINT = "http://otel_collector:4318"

# Auth Service - child of gateway
[services.auth_service]
type = "generic_container"
plugin = "generic_container"
image = "alpine:latest"

[services.auth_service.env]
OTEL_SERVICE_NAME = "rosetta-auth-service"
OTEL_EXPORTER_OTLP_ENDPOINT = "http://otel_collector:4318"

# User Service - child of gateway, sibling of auth
[services.user_service]
type = "generic_container"
plugin = "generic_container"
image = "alpine:latest"

[services.user_service.env]
OTEL_SERVICE_NAME = "rosetta-user-service"
OTEL_EXPORTER_OTLP_ENDPOINT = "http://otel_collector:4318"

# Database - child of user service
[services.database]
type = "generic_container"
plugin = "generic_container"
image = "postgres:16-alpine"

[services.database.env]
POSTGRES_PASSWORD = "testpass"
OTEL_SERVICE_NAME = "rosetta-database"
OTEL_EXPORTER_OTLP_ENDPOINT = "http://otel_collector:4318"

# Test Steps - Creates hierarchical trace
[[steps]]
name = "gateway_receives_request"
service = "api_gateway"
command = ["echo", "Gateway: Request received"]

[[steps]]
name = "gateway_calls_auth"
service = "auth_service"
command = ["echo", "Auth: Validating token"]

[[steps]]
name = "gateway_calls_user_service"
service = "user_service"
command = ["echo", "UserService: Fetching user"]

[[steps]]
name = "user_service_queries_db"
service = "database"
command = ["sh", "-c", "echo 'DB: Executing query'"]

[[steps]]
name = "user_service_returns"
service = "user_service"
command = ["echo", "UserService: Returning user data"]

[[steps]]
name = "gateway_returns_response"
service = "api_gateway"
command = ["echo", "Gateway: Sending response"]

# OTEL Validation - Graph topology dimension
[otel_validation]
enabled = true
validate_spans = true
validate_traces = true
validate_graph_topology = true

# Expected spans with hierarchy
[[otel_validation.expected_spans]]
name = "gateway.request"
required = true
is_root = true

[otel_validation.expected_spans.attributes]
"span.kind" = "server"
"http.method" = "GET"

[[otel_validation.expected_spans]]
name = "auth.validate"
required = true
parent = "gateway.request"

[otel_validation.expected_spans.attributes]
"span.kind" = "client"
"auth.method" = "token"

[[otel_validation.expected_spans]]
name = "user.fetch"
required = true
parent = "gateway.request"

[otel_validation.expected_spans.attributes]
"span.kind" = "client"
"operation.type" = "read"

[[otel_validation.expected_spans]]
name = "db.query"
required = true
parent = "user.fetch"

[otel_validation.expected_spans.attributes]
"span.kind" = "client"
"db.system" = "postgresql"

# Graph topology structure
[[otel_validation.expected_traces]]
span_names = ["gateway.request", "auth.validate", "user.fetch", "db.query"]
complete = true
is_tree = true

# Parent-child relationships (explicit graph edges)
[[otel_validation.expected_traces.parent_child]]
parent = "gateway.request"
child = "auth.validate"
edge_type = "synchronous"

[[otel_validation.expected_traces.parent_child]]
parent = "gateway.request"
child = "user.fetch"
edge_type = "synchronous"

[[otel_validation.expected_traces.parent_child]]
parent = "user.fetch"
child = "db.query"
edge_type = "synchronous"

# Topology constraints
[[otel_validation.graph_topology_constraints]]
no_orphaned_spans = true
no_cycles = true
single_root = true
max_depth = 3

[[otel_validation.graph_topology_constraints.required_paths]]
from = "gateway.request"
to = "db.query"
path = ["gateway.request", "user.fetch", "db.query"]

# Validate sibling relationships
[[otel_validation.sibling_constraints]]
span_a = "auth.validate"
span_b = "user.fetch"
shared_parent = "gateway.request"
execution_order = "parallel"

# Tree structure validation
[otel_validation.tree_structure]
root = "gateway.request"
max_children_per_node = 2
expected_leaf_count = 2  # auth.validate and db.query are leaves

[[otel_validation.tree_structure.expected_branches]]
level_0 = ["gateway.request"]
level_1 = ["auth.validate", "user.fetch"]
level_2 = ["db.query"]

[assertions]
execution_should_be_hermetic = true
span_graph_is_valid_tree = true
no_orphaned_spans = true
no_cycles_in_trace = true
