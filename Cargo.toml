[workspace]
resolver = "2"

members = [
  "crates/clnrm",
  "crates/clnrm-core",
  "crates/clnrm-shared",
]

# Default members for core functionality
default-members = ["crates/clnrm", "crates/clnrm-core", "crates/clnrm-shared"]

[workspace.package]
version = "1.0.1"
edition = "2021"
license = "MIT"
authors = ["Sean Chatman <seanchatmangpt@gmail.com>"]
repository = "https://github.com/seanchatmangpt/clnrm"

[workspace.dependencies]
# Core dependencies
tokio = { version = "1.0", features = ["full"] }
serde = { version = "1.0", features = ["derive"] }
serde_json = "1.0"
anyhow = "1.0"
tracing = "0.1"

# Container dependencies
testcontainers = { version = "0.25", features = ["blocking"] }
testcontainers-modules = { version = "0.13", features = ["surrealdb"] }
futures-util = "0.3"
surrealdb = "2.2"

# CLI dependencies
clap = { version = "4.5.49", features = ["derive"] }
env_logger = "0.11.8"
log = "0.4.28"
toml = "0.9"
regex = "1.0"
walkdir = "2.5"
tempfile = "3.0"
junit-report = "0.8"
notify = "6.0"
toml_edit = "0.22"
quick-xml = { version = "0.31", features = ["serialize"] }

# OpenTelemetry dependencies
opentelemetry = { version = "0.31.0", default-features = false, features = [
  "trace",
  "metrics",
  "logs",
  "futures",
] }
opentelemetry_sdk = { version = "0.31.0", default-features = false, features = [
  "trace",
  "metrics",
  "logs",
  "rt-tokio",
  "testing",
] }
opentelemetry-stdout = { version = "0.31.0", features = [
  "trace",
  "metrics",
  "logs",
] }
opentelemetry-otlp = { version = "0.31.0", default-features = false, features = [
  "trace",
  "metrics",
  "logs",
  "http-proto",
  "grpc-tonic",
  "reqwest-client",
] }
opentelemetry-jaeger = { version = "0.22.0" }
opentelemetry-zipkin = { version = "0.31.0" }
opentelemetry-semantic-conventions = "0.15.0"
tracing-opentelemetry = "0.32.0"
tracing-subscriber = { version = "0.3.20", features = [
  "fmt",
  "env-filter",
  "registry",
] }

# Additional dependencies for OTLP integration
reqwest = { version = "0.12", features = ["json", "rustls-tls"] }

# Utility dependencies
uuid = { version = "1.0", features = ["v4", "serde"] }
chrono = { version = "0.4", features = ["serde"] }
hostname = "0.4"

# Snapshot testing dependencies
insta = { version = "1.34", features = ["json", "yaml"] }

# Benchmarking dependencies
criterion = { version = "0.5", features = ["html_reports", "async_tokio"] }
