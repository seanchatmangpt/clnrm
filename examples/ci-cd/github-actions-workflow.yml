---
# GitHub Actions Workflow Example
# This file demonstrates the GitHub Actions integration claim from the README
# Users can copy this file to their .github/workflows/ directory

name: Cleanroom Tests

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main]

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install Cleanroom CLI
        run: |
          curl -fsSL https://install.clnrm.dev | sh
          echo "$HOME/.local/bin" >> $GITHUB_PATH

    - name: Verify CLI installation
      run: clnrm --version

    - name: Initialize test project
      run: clnrm init test-project

    - name: Create test configuration
      working-directory: test-project
      run: |
        cat > tests/integration.toml << 'EOF'
        [test.metadata]
        name = "github_actions_integration"
        description = "Test that runs in GitHub Actions"

        [services.database]
        type = "generic_container"
        plugin = "postgres"
        image = "postgres:15-alpine"

        [services.api]
        type = "generic_container"
        plugin = "nginx"
        image = "nginx:alpine"

        [[steps]]
        name = "verify_database"
        service = "database"
        command = ["pg_isready", "-h", "localhost"]
        expected_exit_code = 0

        [[steps]]
        name = "verify_api"
        service = "api"
        command = ["wget", "--spider", "http://localhost:80"]
        expected_exit_code = 0

        [assertions]
        database_should_be_ready = true
        api_should_be_ready = true
        EOF

    - name: Run Cleanroom Tests
      working-directory: test-project
      run: |
        clnrm run tests/ --parallel --jobs 4 --format junit > test-results.xml

    - name: Upload Test Results
      if: always()
      uses: actions/upload-artifact@v3
      with:
        name: cleanroom-test-results
        path: test-project/test-results.xml

    - name: Generate HTML Report
      if: always()
      working-directory: test-project
      run: clnrm report tests/ --format html --output test-report.html

    - name: Upload HTML Report
      if: always()
      uses: actions/upload-artifact@v3
      with:
        name: cleanroom-test-report
        path: test-project/test-report.html

    - name: Comment Test Results
      if: always()
      uses: actions/github-script@v6
      with:
        script: |
          const fs = require('fs');
          const path = 'test-project/test-results.xml';

          if (fs.existsSync(path)) {
            const content = fs.readFileSync(path, 'utf8');
            const testsuites = content.match(/testsuite.*?tests="(\d+)"/);
            const failures = content.match(/testsuite.*?failures="(\d+)"/);

            const total = testsuites ? testsuites[1] : '0';
            const failed = failures ? failures[1] : '0';

            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: `## Cleanroom Test Results

              ✅ Tests: ${total}
              ❌ Failures: ${failed}
              📊 Success Rate: ${total > 0 ? Math.round(((total - failed) / total) * 100) : 0}%

              Generated by Cleanroom Testing Framework`
            });
          }
