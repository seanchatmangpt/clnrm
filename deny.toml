[advisories]
# The lint level for security vulnerabilities
vulnerability = "deny"
# The lint level for unmaintained crates
unmaintained = "warn"
# The lint level for crates with security notices
notice = "warn"
# The lint level for yanked crates
yanked = "deny"
# The url(s) of the advisory databases to use
db-urls = ["https://github.com/rustsec/advisory-db"]

[licenses]
# The lint level for crates which do not have a detectable license
unlicensed = "deny"
# List of explicitly allowed licenses
# https://spdx.org/licenses/
allow = [
  "MIT",
  "Apache-2.0",
  "Apache-2.0 WITH LLVM-exception",
  "BSD-2-Clause",
  "BSD-3-Clause",
  "ISC",
  "Unicode-DFS-2016",
  "CC0-1.0",
  "0BSD",
]
# List of explicitly disallowed licenses
# https://spdx.org/licenses/
deny = ["GPL-3.0", "AGPL-3.0"]
# Lint level for when multiple versions of the same license are detected
copyleft = "allow"
# The confidence threshold for detecting a license from texts. Higher values reduce false positives
confidence-threshold = 0.8

[bans]
# Lint level for when multiple versions of the same crate are detected
multiple-versions = "warn"
# Lint level for when a crate version requirement is `*`
wildcards = "deny"
# The graph highlighting used when creating dotgraphs for crates
# * lowest-version - The path to the lowest versioned duplicate is highlighted
# * highest-version - The path to the highest versioned duplicate is highlighted
# * all - Both lowest-version and highest-version are used
highlight = "all"

[sources]
# Lint level for when multiple versions of the same source are detected
multiple-versions = "warn"
# Lint level for what to happen when a lock file is missing
missing-lockfile = "deny"
# Lint level for when source code contains git dependencies that are not in the
# allow list
unknown-git = "warn"
# List of URLs for allowed crate registries
allow-registry = ["https://github.com/rust-lang/crates.io-index"]
# List of URLs for allowed Git repositories
allow-git = [
  # OpenTelemetry repositories
  "https://github.com/open-telemetry/opentelemetry-rust",
  "https://github.com/open-telemetry/opentelemetry-rust-contrib",
  # Prometheus repositories
  "https://github.com/prometheus/client_rust",
  # Other trusted repositories
]

[output]
feature-depth = 1
