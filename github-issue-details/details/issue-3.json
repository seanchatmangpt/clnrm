{
  "url": "https://api.github.com/repos/seanchatmangpt/clnrm/issues/3",
  "repository_url": "https://api.github.com/repos/seanchatmangpt/clnrm",
  "labels_url": "https://api.github.com/repos/seanchatmangpt/clnrm/issues/3/labels{/name}",
  "comments_url": "https://api.github.com/repos/seanchatmangpt/clnrm/issues/3/comments",
  "events_url": "https://api.github.com/repos/seanchatmangpt/clnrm/issues/3/events",
  "html_url": "https://github.com/seanchatmangpt/clnrm/issues/3",
  "id": 3527023834,
  "node_id": "I_kwDOQCmyxs7SOhza",
  "number": 3,
  "title": "Misleading performance claims - comparing different features",
  "user": {
    "login": "seanchatmangpt",
    "id": 136349053,
    "node_id": "U_kgDOCCCFfQ",
    "avatar_url": "https://avatars.githubusercontent.com/u/136349053?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/seanchatmangpt",
    "html_url": "https://github.com/seanchatmangpt",
    "followers_url": "https://api.github.com/users/seanchatmangpt/followers",
    "following_url": "https://api.github.com/users/seanchatmangpt/following{/other_user}",
    "gists_url": "https://api.github.com/users/seanchatmangpt/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/seanchatmangpt/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/seanchatmangpt/subscriptions",
    "organizations_url": "https://api.github.com/users/seanchatmangpt/orgs",
    "repos_url": "https://api.github.com/users/seanchatmangpt/repos",
    "events_url": "https://api.github.com/users/seanchatmangpt/events{/privacy}",
    "received_events_url": "https://api.github.com/users/seanchatmangpt/received_events",
    "type": "User",
    "user_view_type": "public",
    "site_admin": false
  },
  "labels": [
    {
      "id": 9463217756,
      "node_id": "LA_kwDOQCmyxs8AAAACNA0-XA",
      "url": "https://api.github.com/repos/seanchatmangpt/clnrm/labels/bug",
      "name": "bug",
      "color": "d73a4a",
      "default": true,
      "description": "Something isn't working"
    },
    {
      "id": 9463217757,
      "node_id": "LA_kwDOQCmyxs8AAAACNA0-XQ",
      "url": "https://api.github.com/repos/seanchatmangpt/clnrm/labels/documentation",
      "name": "documentation",
      "color": "0075ca",
      "default": true,
      "description": "Improvements or additions to documentation"
    }
  ],
  "state": "open",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 0,
  "created_at": "2025-10-17T17:57:08Z",
  "updated_at": "2025-10-17T17:57:08Z",
  "closed_at": null,
  "author_association": "OWNER",
  "active_lock_reason": null,
  "sub_issues_summary": {
    "total": 0,
    "completed": 0,
    "percent_completed": 0
  },
  "issue_dependencies_summary": {
    "blocked_by": 0,
    "total_blocked_by": 0,
    "blocking": 0,
    "total_blocking": 0
  },
  "body": "# Misleading performance claims - comparing different features\n\n## Summary\n\nCLNRM's README claims \"18,000x faster than Docker testcontainers\" but this comparison is fundamentally misleading because CLNRM doesn't actually use Docker containers at all (see #1). Comparing \"no containers\" to \"Docker containers\" is not a valid performance benchmark.\n\n## Environment\n\n- **CLNRM Version:** 1.0.0\n- **OS:** macOS 14.5 (Darwin 24.5.0)\n- **Installation:** Built from source\n\n## The Claims\n\nFrom the README:\n\n> **Performance:**\n> - \"18,000x faster than Docker containers (0.5ms vs 9-18s)\"\n> - \"Setup Time: 0.5 milliseconds vs 9-18 seconds (Testcontainers)\"\n> - \"18,000-36,000x faster!\"\n\nFrom the Changelog:\n> \"Performance Characteristics:\n> - Setup time: 0.5ms (vs 9-18s for Docker testcontainers)\n> - Speedup: 18,000-36,000x faster!\"\n\n## The Problem\n\nThis comparison is misleading because:\n\n1. **CLNRM doesn't use Docker containers** (see #1) - commands run on host\n2. **Comparing apples to oranges** - \"no containers\" vs \"Docker containers\"\n3. **Of course it's faster** - not doing the work makes you faster!\n\n## Analogy\n\nThis is like claiming:\n\n> \"Our pizza delivery service is 100x faster than Domino's!\"\n>\n> (Fine print: We don't actually deliver pizza, we just tell you we did)\n\nThe speed comparison is technically true but fundamentally misleading because the features being compared are completely different.\n\n## What The Claims Should Say\n\n**Honest version:**\n\n> **Performance:**\n> - Setup time: 0.5ms (direct host execution)\n> - Note: Not comparable to Docker-based frameworks as we don't use containers\n> - Tradeoff: Faster execution, but no hermetic isolation\n\n**or**\n\n> **Performance:**\n> - Dry-run validation: 0.008s for 10 files\n> - Host execution: ~300ms per test\n> - No container overhead (because no containers are used)\n\n## Impact\n\n**Medium-High** - This creates false expectations:\n\n1. ‚ùå Users expect container-based testing with better performance\n2. ‚ùå Users discover there are no containers (surprise!)\n3. ‚ùå The \"18,000x faster\" claim sounds suspicious and harms credibility\n4. ‚ùå Apples-to-oranges comparison is not scientifically valid\n5. ‚ùå Makes other performance claims seem dubious\n\n## Evidence\n\n**Test proving no containers are used:**\n\n```bash\n# Before test\n$ docker ps | wc -l\n0\n\n# Run CLNRM test\n$ clnrm run tests/alpine.clnrm.toml\n‚úÖ Service 'test_container' started successfully (288ms)\n\n# After test\n$ docker ps | wc -l\n0\n\n# Output shows macOS, not Alpine Linux\nDarwin Mac.lan 24.5.0 Darwin Kernel Version 24.5.0\n```\n\n**Actual performance characteristics:**\n- Host command execution: ~300ms per test (fast because no containers)\n- Dry-run validation: 0.008s (very fast, just TOML parsing)\n- Format/lint: <10ms (also very fast, no containers involved)\n\n## Why This Matters\n\nFrom CLNRM's documentation philosophy:\n> \"üéØ Real Evidence - Not Claims\"\n> \"Every feature claimed above has been verified through actual execution\"\n\nThe performance claims are not backed by **comparable** evidence. You can't claim to be faster than Docker containers when you're not using containers.\n\n## Suggested Fixes\n\n**Option 1: Remove container comparisons**\n```markdown\n**Performance:**\n- Dry-run validation: <0.01s for 10 files\n- Host execution: ~300ms per test\n- Format/lint: <10ms\n\nNote: CLNRM executes commands directly on the host system,\nnot in containers, for maximum speed.\n```\n\n**Option 2: Be honest about tradeoffs**\n```markdown\n**Performance vs Isolation Tradeoff:**\n\nCLNRM prioritizes speed over isolation:\n- Host execution: ~300ms (no container overhead)\n- Docker execution: ~9-18s (hermetic isolation)\n\nChoose based on your needs:\n- Fast feedback loops ‚Üí CLNRM (host execution)\n- Hermetic isolation ‚Üí Testcontainers (Docker containers)\n```\n\n**Option 3: If containers are implemented in the future**\n\nOnly make performance claims **after** implementing actual Docker container support, and benchmark fairly:\n- Same test scenario\n- Same hardware\n- Same container images\n- Measure: total time including container startup\n- Report: median of 10 runs with standard deviation\n\n## Related Issues\n\n- #1 Container isolation not working - explains why performance is \"better\"\n- #2 Self-test crashes - can't verify performance claims\n\n## Additional Context\n\nDiscovered during systematic audit of README claims vs actual behavior. The \"18,000x\" claim is so extreme it triggered immediate skepticism, leading to investigation that revealed no containers are actually used.\n\n**Benchmark comparison methodology issues:**\n1. ‚ùå Comparing different features (containers vs no containers)\n2. ‚ùå No reproducible benchmark script provided\n3. ‚ùå No standard deviation or confidence intervals\n4. ‚ùå Baseline (testcontainers) behavior not verified\n5. ‚ùå Makes CLNRM seem dishonest when features don't match claims\n\n## Recommendations\n\n**Immediate:**\n- Remove or clearly qualify all \"faster than Docker\" claims\n- Add prominent note that host execution (not containers) is used\n- Update changelog to remove misleading comparisons\n\n**Future:**\n- If containers are implemented, create fair benchmarks\n- Provide reproducible benchmark scripts\n- Report performance with proper statistical analysis\n- Compare like-to-like (containers to containers, host to host)\n",
  "closed_by": null,
  "reactions": {
    "url": "https://api.github.com/repos/seanchatmangpt/clnrm/issues/3/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/seanchatmangpt/clnrm/issues/3/timeline",
  "performed_via_github_app": null,
  "state_reason": null
}
